name: update
on:
  push:
    branches:
      - main
  schedule:
    - cron: 50 0 * * *
  workflow_dispatch: {}

jobs:
  update:
    name: Update AWS Managed Policies
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    outputs:
      conclusion: ${{ steps.build.outputs.conclusion }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.0.1
        with:
          role-to-assume: ${{ secrets.GITHUBACTION_ROLE }}
          role-session-name: github-workflow-rolesession
          aws-region: us-east-1
      - name: Run Update AWS Managed Policies
        id: build 
        run: ./check && echo "conclusion=success" >> $GITHUB_OUTPUT || echo "conclusion=failure" >> $GITHUB_OUTPUT
      - name: Upload update.txt
        uses: actions/upload-artifact@v4.4.0
        with:
          name: update.txt
          path: .
          overwrite: true
      - name: Create Patch
        run: |-
          git add .
          git diff --patch --staged > upgrade.tmp.patch
      - name: Upload patch
        uses: actions/upload-artifact@v4.4.0
        with:
          name: upgrade.tmp.patch
          path: ${{ runner.temp }}
  pr:
    name: Create Pull Request
    needs: update
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      checks: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download update.txt
        uses: actions/download-artifact@v4
        with:
          name: update.txt
          path: ${{ runner.temp }}
      - name: Download patch
        uses: actions/download-artifact@v4
        with:
          name: upgrade.tmp.patch
          path: ${{ runner.temp }}
      - name: Apply patch
        run: |-
          export FINAL=$(cat ${{ runner.temp }}/update.txt)
          echo "::group::Echo Group"
          echo "Inside group $FINAL"
          echo "::endgroup::"
          cat ${{ runner.temp }}/update.txt && [ `cat ${{ runner.temp }}/update.txt` == "Y" ] &&  [ -s ${{ runner.temp }}/upgrade.tmp.patch ] && git apply ${{ runner.temp
          }}/upgrade.tmp.patch || echo "Skipping."
      - name: Create Pull Request
        id: create-pr
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.AUTOMATION_GITHUB_TOKEN }}
          commit-message: >-
            chore(policies): update policies
            Upgrades project dependencies. See details in [workflow run].
            [Workflow Run]: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            ------
          branch: github-actions/update
          title: "chore(policies): update policies"
          labels: auto-approve
          body: >-
            update policies. See details in [workflow run].
            [Workflow Run]: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            ------
          author: Automation <github-actions@github.com>
          committer: Automation <github-actions@github.com>
      - name: Update status check
        if: steps.create-pr.outputs.pull-request-url != ''
        run: "curl -i --fail -X POST -H \"Accept: application/vnd.github.v3+json\" -H
          \"Authorization: token ${GITHUB_TOKEN}\"
          https://api.github.com/repos/${{ github.repository }}/check-runs -d
          '{\"name\":\"build\",\"head_sha\":\"github-actions/update\",\"status\
          \":\"completed\",\"conclusion\":\"${{ needs.update.outputs.conclusion
          }}\",\"output\":{\"title\":\"Created via the update
          workflow.\",\"summary\":\"Action run URL: https://github.com/${{
          github.repository }}/actions/runs/${{ github.run_id }}\"}}'"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
